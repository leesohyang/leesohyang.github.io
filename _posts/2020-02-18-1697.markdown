---
layout: post
title:  "[백준]1697번"
subtitle:   "[백준]1697번"
categories: algorithm language 
tags: algorithm language C++
comments: true
---


## 문제
---
수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 순간이동을 하는 경우에는 1초 후에 2*X의 위치로 이동하게 된다.

수빈이와 동생의 위치가 주어졌을 때, 수빈이가 동생을 찾을 수 있는 가장 빠른 시간이 몇 초 후인지 구하는 프로그램을 작성하시오.

## 코드
---

최단거리는 BFS... 무족권... dist 배열에 거기까지 가는데 얼마나 걸렸는지 저장해놓기...  


    '''c
	#include <string>
	#include <vector>
	#include <algorithm>
	#include <iostream>
	#include <fstream>
	#include <queue>
	using namespace std;
	
	int dx[] = { -1, 1, 2 };
	int n, m, res;
	queue<int> q;
	int ch[200001];
	int dist[200001];
	
	void BFS() {
	   q.push(n);
	   dist[n] = 0;
	   ch[n] = 1;
	 
	   while (!q.empty()) {
	      int x = q.front();
	      q.pop();

	      for (int i = 0; i < 3; i++) {
	         int xx = x + dx[i];
	         if (i == 2) xx = x * dx[2];
	         if (xx < 0 || xx > 200000) continue;
	         
	         if (ch[xx] == 0) { 
	            if (nx == m) {
	               dist[xx] = dist[x] + 1;
	               res = dist[xx];
	               return;
	            }
	            
	            q.push(nx);
	            ch[xx] = 1;
	            dist[xx] = dist[x] + 1;
	         }
	      }
	    }
	}
	
	int main() {
	   scanf("%d %d", &n, &m);
	 
	   BFS();
	   printf("%d", res);
	
	   return 0;
	}
    '''

