---
layout: post
title:  "[백준-DP] 2579"
subtitle:   "[백준-DP] 2579"
categories: algorithm language 
tags: algorithm language C++
comments: true
---


## 문제 
---

<https://www.acmicpc.net/status?user_id=dlehfrn96&problem_id=2579&from_mine=1> 계단 오르기

1. 마지막 전의 계단을 밟은 경우(전전 계단 안밟음)

2. 마지막 전전의 계단을 밟은 경우

둘중에 큰 값으로 dp[]값을 정하면 된다.

## 코드
---



    '''c
	#include <string>
	#include <vector>
	#include <algorithm>
	#include <iostream>
	#include <fstream>
	#include <queue>
	
	//#include <bits/stdc++.h>
	using namespace std;
	const int MAX = 301;
	int dp[MAX], value[MAX];
	int N;
	int main() {
	
		ios_base::sync_with_stdio(false);
	
		ifstream cin;
		cin.open("input.txt");
		cin >> N;
		for (int i = 0; i < N; i++) {
			cin >> value[i];
		}
		dp[0] = value[0];
		dp[1] = value[0] + value[1];
		dp[2] = max(value[0] + value[2], value[1] + value[2]);
		for (int i = 3; i < N; i++) {
			dp[i] = max(dp[i - 3] + value[i - 1] + value[i], dp[i - 2] + value[i]);
		}
	
		cout << dp[N - 1];
		return 0;
	}
    '''

